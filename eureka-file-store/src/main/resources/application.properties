spring.application.name=eureka-file-store

server.port=8083
spring.config.import=optional:file:.config/common.properties

#Eureka
eureka.client.service-url.defaultZone=${EUREKA_URL}
eureka.instance.leaseRenewalIntervalInSeconds=5
eureka.instance.leaseExpirationDurationInSeconds=10
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=300MB
server.tomcat.max-swallow-size=-1

#Data bases
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/files
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

#Kafka
spring.kafka.bootstrap-servers=${KAFKA_BROKER}
spring.kafka.consumer.group-id=eureka-file-store
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringSerializer

#Resid
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.cache.type=redis
spring.cache.redis.time-to-live=600000

#JWT
jwt.secret=${JWT_SECRET}

#AWS
S3ServiceStorage=${AWS_STORAGE}
access.key=${AWS_KEY}
secret.key=${AWS_SECRET}
spring.kafka.consumer.properties.spring.json.trusted.packages=*
